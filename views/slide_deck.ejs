<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title><%= slide_deck_title %></title>
<% if (favicon) { %>
    <link rel="icon" href="<%= base_url %><%= favicon %>">
<% } %>
    <link rel="stylesheet" href="<%= base_url %>/reveal.js/dist/reset.css">
    <link rel="stylesheet" href="<%= base_url %>/reveal.js/dist/reveal.css">
    <link rel="stylesheet" href="<%= base_url %>/reveal.js/dist/theme/black.css">
    <link rel="stylesheet" href="<%= base_url %>/reveal.js/plugin/highlight/monokai.css">
    <link rel="stylesheet" href="<%= base_url %>/public/slides_style.css">
</head>
<body>
    <div id="printPdfSection" class="hidden">
        <div class="print-pdf-buttons">
            <button id="printPdfPrintBtn" class="print-pdf-button print-pdf-img-button">
                <img src="<%= base_url %>/public/printer_icon.png" alt="Print PDF">
            </button>
            <button id="printPdfConfigBtn" class="print-pdf-button print-pdf-img-button">
                <img src="<%= base_url %>/public/settings_icon.png" alt="PDF options">
            </button>
            <button id="printPdfHelpBtn" class="print-pdf-button print-pdf-img-button">
                <span>?</span>
            </button>
        </div>
        <div class="print-pdf-sections">
            <section id="printPdfConfig" class="print-pdf-section hidden">
                <h1>Slides configuration</h1>
                <form id="pdfConfigForm">
                    <div class="print-pdf-config-item">
                        <label for="printPdfSlideNotes">Slide Notes:</label>
                        <select id="printPdfSlideNotes" name="slideNotes">
                            <option value="hide">Hide</option>
                            <option value="onSlide">On Slide</option>
                            <option value="onSeparatePage">On Separate Page</option>
                        </select>
                    </div>
                    <div class="print-pdf-config-item">
                        <input type="checkbox" id="printPdfMergeFragments" name="mergeFragments" value="true">
                        <label for="printPdfMergeFragments">Merge Fragments</label>
                    </div>
                    <div class="print-pdf-config-item">
                        <input type="checkbox" id="printPdfShowSlideNumbers" name="showSlideNumbers" value="true">
                        <label for="printPdfShowSlideNumbers">Show Slide Numbers</label>
                    </div>
                    <button type="button" id="applyPdfConfig" class="print-pdf-button print-pdf-txt-button">
                        <span>Apply</span>
                    </button>
                    <button type="button" id="resetPdfConfig" class="print-pdf-button print-pdf-txt-button">
                        <span>Reset</span>
                    </button>
                </form>
            </section>
            <section id="printPdfHelp" class="print-pdf-section hidden">
                <h1>How to save slides as pdf?</h1>
                <ol>
                    <li>Open the print dialog.</li>
                    <li>Change <span class="print-pdf-highlight">Destination</span> to <span class="print-pdf-highlight">Save to PDF</span>.</li>
                    <li>Change <span class="print-pdf-highlight">Layout</span> to <span class="print-pdf-highlight">Landscape</span>.</li>
                    <li>Change <span class="print-pdf-highlight">Margins</span> to <span class="print-pdf-highlight">None</span>.</li>
                    <li>Disable <span class="print-pdf-highlight">Print headers and footers</span> option.</li>
                    <li>Enable <span class="print-pdf-highlight">Print backgrounds</span> option.</li>
                    <li>Click the <span class="print-pdf-highlight">Save</span> button.</li>
                    <li>Choose a filename and destination.</li>
                </ol>
            </section>
        </div>
    </div>
    <div class="reveal">
        <div class="slides">
            <section data-markdown data-separator="\r?\n---\r?\n" data-separator-vertical="\r?\n--\r?\n" data-separator-notes="^Notes?:">
                <textarea data-template>
<%- slide_deck_content_markdown %>
                </textarea>
            </section>
        </div>
    </div>
    <script src="<%= base_url %>/reveal.js/dist/reveal.js"></script>
    <script src="<%= base_url %>/reveal.js/plugin/notes/notes.js"></script>
    <script src="<%= base_url %>/reveal.js/plugin/markdown/markdown.js"></script>
    <script src="<%= base_url %>/reveal.js/plugin/highlight/highlight.js"></script>
    <script src="<%= base_url %>/reveal.js-mermaid-plugin/plugin/mermaid/mermaid.js"></script>
    <script>
        const pdfConfigKey = "print-pdf-config";
        const defaultConfig = { showNotes: true, pdfSeparateFragments: false, slideNumber: false };

        const getConfig = () => JSON.parse(localStorage.getItem(pdfConfigKey)) || defaultConfig;
        const setConfig = config => localStorage.setItem(pdfConfigKey, JSON.stringify(config));

        var revealConfig = {
            hash: true,
            mermaid: {'theme': 'dark', 'themeVariables': { 'darkMode': true }},
            plugins: [RevealMarkdown, RevealHighlight, RevealNotes, RevealMermaid],
            dependencies: [
                { src: "<%= base_url %>/reveal.js-countdown/countdown.js" },
            ]
        };

        if (new URLSearchParams(window.location.search).has("print-pdf")) {
            document.getElementById("printPdfSection").classList.toggle("hidden");
            Object.assign(revealConfig, getConfig());
        }

        Reveal.initialize(revealConfig);

        document.addEventListener("DOMContentLoaded", () => {
            const { showNotes, pdfSeparateFragments, slideNumber } = getConfig();
            document.getElementById("printPdfSlideNotes").value = showNotes === "separate-page" ? "onSeparatePage" : showNotes ? "onSlide" : "hide";
            document.getElementById("printPdfMergeFragments").checked = !pdfSeparateFragments;
            document.getElementById("printPdfShowSlideNumbers").checked = slideNumber === "c/t";
        });

        const toggleSection = sectionId => {
            document.getElementById(`${sectionId}Btn`).classList.toggle("active-print-pdf-button");
            document.getElementById(sectionId).classList.toggle("hidden");
        };

        document.getElementById("printPdfPrintBtn").addEventListener("click", () => window.print());
        document.getElementById("printPdfConfigBtn").addEventListener("click", () => toggleSection("printPdfConfig"));
        document.getElementById("printPdfHelpBtn").addEventListener("click", () => toggleSection("printPdfHelp"));

        document.getElementById("applyPdfConfig").addEventListener("click", () => {
            const showNotesValue = document.getElementById("printPdfSlideNotes").value;
            setConfig({
                showNotes: showNotesValue === "onSeparatePage" ? "separate-page" : showNotesValue === "onSlide",
                pdfSeparateFragments: !document.getElementById("printPdfMergeFragments").checked,
                slideNumber: document.getElementById("printPdfShowSlideNumbers").checked ? "c/t" : false
            });
            window.location.reload();
        });

        document.getElementById("resetPdfConfig").addEventListener("click", () => {
            setConfig(defaultConfig);
            window.location.reload();
        });
    </script>
</body>
</html>
